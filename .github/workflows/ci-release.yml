name: ci-release

on:
  schedule:
    - cron: "0 6 * * *" # daily at 11:00 UTC+5
  workflow_dispatch:
  pull_request:
    branches:
      - main

jobs:
  build:
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest ]
        python-version: ["3.10", "3.9", "3.8"]
    env:
      python-version: ${{ matrix.python-version}}
    runs-on: ${{ matrix.os }}
    steps:
    
      - name: Cancel previous
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ github.token }}
        if: ${{github.ref != 'refs/head/main'}}

      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        id: setup_python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Code style check
        uses: pre-commit/action@v3.0.0

      - name: Get pip cache dir
        id: pip-cache
        run: |
          python -m pip install --upgrade pip wheel
          echo "::set-output name=dir::$(pip cache dir)"
          
      - name: Get pip cache
        id: cache-modules
        uses: actions/cache@v3
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('**/setup.py', '**/requirements-dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            
      - name: Install dependencies
        run: |
          pip install -r requirements-dev.txt
          
      - name: Generate coverage report for python ${{ matrix.python-version }} on ${{ matrix.os }}
        run: |
          pytest --cov=./ --cov-report=xml
          
      - name: Upload coverage to Codecov
        if:  ${{ runner.os == 'Linux' && env.python-version == 3.8 }}
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          flags: pytest
          fail_ci_if_error: true
